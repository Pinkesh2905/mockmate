# Generated by Django 5.1.7 on 2025-08-04 14:34

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='The question text.')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(help_text='The answer choice text.', max_length=255)),
                ('is_correct', models.BooleanField(default=False, help_text='True if this is the correct answer.')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='quizzes.question')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True)),
                ('description', models.TextField(blank=True, help_text='A brief description of the quiz.')),
                ('passing_score', models.IntegerField(default=70, help_text='Minimum percentage score required to pass the quiz.', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('duration_minutes', models.IntegerField(default=30, help_text='Maximum duration allowed for the quiz in minutes.', validators=[django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING_APPROVAL', 'Pending Approval'), ('PUBLISHED', 'Published'), ('ARCHIVED', 'Archived')], default='DRAFT', help_text='Current status of the quiz (e.g., Draft, Pending Approval, Published).', max_length=20)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(blank=True, help_text='Optional: The course this quiz is associated with.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quizzes', to='courses.course')),
                ('created_by', models.ForeignKey(blank=True, help_text='The user (tutor/staff) who created this quiz.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_quizzes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Quizzes',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='question',
            name='quiz',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='quizzes.quiz'),
        ),
        migrations.CreateModel(
            name='QuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0, help_text='Score obtained by the user (raw points).')),
                ('percentage_score', models.DecimalField(decimal_places=2, default=0.0, help_text='Percentage score obtained by the user.', max_digits=5)),
                ('passed', models.BooleanField(default=False, help_text='Whether the user passed the quiz.')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('selected_answers', models.JSONField(blank=True, help_text='JSON of selected answers: {question_id: [answer_id, ...]}', null=True)),
                ('quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='quizzes.quiz')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quiz_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
    ]
