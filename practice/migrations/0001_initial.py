# Generated by Django 5.1.7 on 2025-08-04 14:33

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PracticeProblem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('difficulty', models.CharField(blank=True, max_length=50)),
                ('companies', models.CharField(blank=True, help_text='Optional: companies where this problem was asked', max_length=255)),
                ('url', models.URLField(blank=True, help_text='Optional external link if any')),
                ('statement', models.TextField(help_text='Full problem description')),
                ('sample_input', models.TextField(blank=True, help_text='Sample input for problem')),
                ('sample_output', models.TextField(blank=True, help_text='Sample output for problem')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING_APPROVAL', 'Pending Approval'), ('PUBLISHED', 'Published'), ('ARCHIVED', 'Archived')], default='DRAFT', help_text='Current status of the problem (e.g., Draft, Pending Approval, Published).', max_length=20)),
                ('template_python', models.TextField(blank=True, null=True)),
                ('template_cpp', models.TextField(blank=True, null=True)),
                ('template_java', models.TextField(blank=True, null=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='The user (tutor/staff) who created this problem.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_problems', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PracticeSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField(help_text="User's submitted code")),
                ('language', models.CharField(default='python3', help_text='Language of submission: python3, cpp, java, etc.', max_length=20)),
                ('raw_output', models.TextField(blank=True, help_text='Raw execution output from JDoodle')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('ACCEPTED', 'Accepted'), ('WRONG_ANSWER', 'Wrong Answer'), ('TIME_LIMIT_EXCEEDED', 'Time Limit Exceeded'), ('RUNTIME_ERROR', 'Runtime Error'), ('COMPILATION_ERROR', 'Compilation Error'), ('UNKNOWN_ERROR', 'Unknown Error')], default='PENDING', help_text='Status of the submission (e.g., Accepted, Wrong Answer)', max_length=50)),
                ('test_results', models.JSONField(blank=True, help_text='Detailed results for each test case (JSON format)', null=True)),
                ('cpu_time', models.CharField(blank=True, max_length=50, null=True)),
                ('memory', models.CharField(blank=True, max_length=50, null=True)),
                ('submission_time', models.DateTimeField(auto_now_add=True)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='practice.practiceproblem')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='practice_submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-submission_time'],
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input', models.TextField(help_text='Input for the test case')),
                ('expected_output', models.TextField(help_text='Expected output for the test case')),
                ('is_sample', models.BooleanField(default=False, help_text='True if this is a sample test case visible to the user')),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_cases', to='practice.practiceproblem')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
    ]
