problem_slug,input_data,expected_output,is_sample,is_hidden,description,explanation,difficulty_weight,order
two-sum,"[2,7,11,15]
9","[0,1]",TRUE,FALSE,Example 1,"Because nums[0] + nums[1] == 9, we return [0, 1].",1,1
two-sum,"[3,2,4]
6","[1,2]",TRUE,FALSE,Example 2,"",1,2
two-sum,"[3,3]
6","[0,1]",TRUE,FALSE,Example 3,"",1,3
two-sum,"[1,2,3,4,5]
9","[3,4]",FALSE,TRUE,Hidden test case 1,"",2,4
two-sum,"[-1,-2,-3,-4,-5]
-8","[2,4]",FALSE,TRUE,Hidden test case 2,"",2,5
best-time-to-buy-and-sell-stock,[7,1,5,3,6,4],5,TRUE,FALSE,Example 1,"Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5.",1,1
best-time-to-buy-and-sell-stock,[7,6,4,3,1],0,TRUE,FALSE,Example 2,"No transactions are done and the max profit = 0.",1,2
best-time-to-buy-and-sell-stock,[1,2,3,4,5],4,FALSE,TRUE,Increasing prices,Buy at 1, sell at 5,1,3
best-time-to-buy-and-sell-stock,[5,4,3,2,1],0,FALSE,TRUE,Decreasing prices,No profit possible,1,4
best-time-to-buy-and-sell-stock,[2,4,1],2,FALSE,TRUE,Mixed prices,Buy at 2, sell at 4,2,5
valid-parentheses,(),true,TRUE,FALSE,Example 1,"",1,1
valid-parentheses,"()[]{}",true,TRUE,FALSE,Example 2,"",1,2
valid-parentheses,(],false,TRUE,FALSE,Example 3,"",1,3
valid-parentheses,([)],false,FALSE,TRUE,Invalid nesting,"",2,4
valid-parentheses,"{[]}",true,FALSE,TRUE,Valid nesting,"",2,5
valid-parentheses,((,false,FALSE,TRUE,Unclosed brackets,"",1,6
merge-two-sorted-lists,"[1,2,4]
[1,3,4]","[1,1,2,3,4,4]",TRUE,FALSE,Example 1,"",1,1
merge-two-sorted-lists,"[]
[]",[] ,TRUE,FALSE,Example 2,"",1,2
merge-two-sorted-lists,"[]
[0]",[0],TRUE,FALSE,Example 3,"",1,3
merge-two-sorted-lists,"[1]
[2]","[1,2]",FALSE,TRUE,Single elements,"",1,4
merge-two-sorted-lists,"[1,3,5]
[2,4,6]","[1,2,3,4,5,6]",FALSE,TRUE,Alternating merge,"",2,5
maximum-subarray,"[-2,1,-3,4,-1,2,1,-5,4]",6,TRUE,FALSE,Example 1,"The subarray [4,-1,2,1] has the largest sum 6.",1,1
maximum-subarray,[1],1,TRUE,FALSE,Example 2,"The subarray [1] has the largest sum 1.",1,2
maximum-subarray,"[5,4,-1,7,8]",23,TRUE,FALSE,Example 3,"The subarray [5,4,-1,7,8] has the largest sum 23.",1,3
maximum-subarray,"[-1,-2,-3,-4]",-1,FALSE,TRUE,All negative,Single element with maximum value,2,4
maximum-subarray,"[1,2,3,4,5]",15,FALSE,TRUE,All positive,Sum of all elements,1,5
climbing-stairs,2,2,TRUE,FALSE,Example 1,"1+1, 2",1,1
climbing-stairs,3,3,TRUE,FALSE,Example 2,"1+1+1, 1+2, 2+1",1,2
climbing-stairs,1,1,FALSE,TRUE,Base case,Only one way,1,3
climbing-stairs,4,5,FALSE,TRUE,4 steps,"1+1+1+1, 1+1+2, 1+2+1, 2+1+1, 2+2",2,4
climbing-stairs,5,8,FALSE,TRUE,5 steps,Fibonacci sequence,2,5
binary-tree-inorder-traversal,"[1,null,2,3]","[1,3,2]",TRUE,FALSE,Example 1,"",1,1
binary-tree-inorder-traversal,[],[] ,TRUE,FALSE,Example 2,Empty tree,1,2
binary-tree-inorder-traversal,[1],[1],TRUE,FALSE,Example 3,Single node,1,3
binary-tree-inorder-traversal,"[1,2,3,4,5]","[4,2,5,1,3]",FALSE,TRUE,Complete binary tree,"Left, root, right traversal",2,4
same-tree,"[1,2,3]
[1,2,3]",true,TRUE,FALSE,Example 1,Identical trees,1,1
same-tree,"[1,2]
[1,null,2]",false,TRUE,FALSE,Example 2,Different structure,1,2
same-tree,"[1,2,1]
[1,1,2]",false,TRUE,FALSE,Example 3,Different values,1,3
same-tree,"[]
[]",true,FALSE,TRUE,Both empty,Both trees are null,1,4
same-tree,"[1]
[1]",true,FALSE,TRUE,Single nodes,Same value,1,5
symmetric-tree,"[1,2,2,3,4,4,3]",true,TRUE,FALSE,Example 1,Symmetric tree,1,1
symmetric-tree,"[1,2,2,null,3,null,3]",false,TRUE,FALSE,Example 2,Not symmetric,1,2
symmetric-tree,[1],true,FALSE,TRUE,Single node,Always symmetric,1,3
symmetric-tree,"[1,2,2]",true,FALSE,TRUE,Simple symmetric,Three nodes,1,4
maximum-depth-of-binary-tree,"[3,9,20,null,null,15,7]",3,TRUE,FALSE,Example 1,"",1,1
maximum-depth-of-binary-tree,"[1,null,2]",2,TRUE,FALSE,Example 2,"",1,2
maximum-depth-of-binary-tree,[],0,FALSE,TRUE,Empty tree,No nodes,1,3
maximum-depth-of-binary-tree,[1],1,FALSE,TRUE,Single node,One level,1,4
valid-palindrome,"A man, a plan, a canal: Panama",true,TRUE,FALSE,Example 1,amanaplanacanalpanama is a palindrome,1,1
valid-palindrome,race a car,false,TRUE,FALSE,Example 2,raceacar is not a palindrome,1,2
valid-palindrome,"",true,FALSE,TRUE,Empty string,Empty is palindrome,1,3
valid-palindrome,a,true,FALSE,TRUE,Single character,Single char is palindrome,1,4
single-number,"[2,2,1]",1,TRUE,FALSE,Example 1,"",1,1
single-number,"[4,1,2,1,2]",4,TRUE,FALSE,Example 2,"",1,2
single-number,[1],1,TRUE,FALSE,Example 3,"",1,3
single-number,"[1,1,2,2,3]",3,FALSE,TRUE,XOR property,"aâŠ•a=0, so result is single number",2,4
linked-list-cycle,"[3,2,0,-4] pos=1",true,TRUE,FALSE,Example 1,Cycle exists,1,1
linked-list-cycle,[1,2] pos=0,true,TRUE,FALSE,Example 2,Cycle at head,1,2
linked-list-cycle,[1] pos=-1,false,FALSE,TRUE,No cycle,"Single node, no cycle",1,3
linked-list-cycle,"[1,2,3] pos=-1",false,FALSE,TRUE,Linear list,No cycle in linear list,1,4
min-stack,"[""MinStack"",""push"",""push"",""push"",""getMin"",""pop"",""top"",""getMin""]
[null,[-2],[0],[-3],null,null,null,null]","[null,null,null,null,-3,null,0,-2]",TRUE,FALSE,Example 1,Operations sequence,1,1
min-stack,"[""MinStack"",""push"",""getMin"",""push"",""getMin""]
[null,[1],null,[2],null]","[null,null,1,null,1]",FALSE,TRUE,Basic operations,Push and getMin,1,2
intersection-of-two-linked-lists,"intersectVal = 8, listA = [4,1,8,4,5], listB = [5,6,1,8,4,5], skipA = 2, skipB = 3",8,TRUE,FALSE,Example 1,Intersected at '8',1,1
intersection-of-two-linked-lists,"intersectVal = 0, listA = [2,6,4], listB = [1,5]",null,TRUE,FALSE,Example 2,No intersection,1,2
intersection-of-two-linked-lists,"intersectVal = 2, listA = [1,9,1,2,4], listB = [3,2,4], skipA = 3, skipB = 1",2,FALSE,TRUE,Intersection at middle,Lists intersect at node with value 2,2,3
intersection-of-two-linked-lists,"intersectVal = 0, listA = [1], listB = [1]",null,FALSE,TRUE,"Same values, no intersection",Different nodes with same value,1,4