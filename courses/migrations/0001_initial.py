# Generated by Django 5.1.7 on 2025-08-04 14:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Topic',
                'verbose_name_plural': 'Topics',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('video_link', models.URLField(blank=True, help_text='Main introductory video link for the course', null=True)),
                ('thumbnail', models.URLField(blank=True, help_text='URL for course thumbnail image')),
                ('duration', models.CharField(blank=True, help_text="e.g., '10 hours', '3 weeks'", max_length=50)),
                ('level', models.CharField(blank=True, max_length=50)),
                ('category', models.CharField(blank=True, max_length=100)),
                ('instructor', models.CharField(blank=True, max_length=255)),
                ('total_lessons', models.PositiveIntegerField(default=0)),
                ('rating', models.FloatField(default=0.0)),
                ('students', models.PositiveIntegerField(default=0)),
                ('price', models.CharField(default='Free', max_length=50)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('PENDING_APPROVAL', 'Pending Approval'), ('PUBLISHED', 'Published'), ('ARCHIVED', 'Archived')], default='DRAFT', help_text='Current status of the course (e.g., Draft, Pending Approval, Published).', max_length=20)),
                ('created_by', models.ForeignKey(blank=True, help_text='The user (tutor/staff) who created this course.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authored_courses', to=settings.AUTH_USER_MODEL)),
                ('topics', models.ManyToManyField(blank=True, help_text='Topics covered in this course', related_name='courses', to='courses.topic')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField(blank=True)),
                ('video_url', models.URLField(blank=True, help_text='Embeddable video URL (e.g., YouTube embed link)', null=True)),
                ('order', models.PositiveIntegerField(default=0)),
                ('duration_minutes', models.PositiveIntegerField(default=0)),
                ('is_video_required', models.BooleanField(default=True, help_text='If true, lesson is marked complete only after video is watched.')),
                ('is_free_preview', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='courses.course')),
                ('created_by', models.ForeignKey(blank=True, help_text='The user (tutor/staff) who created this lesson.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='authored_lessons', to=settings.AUTH_USER_MODEL)),
                ('topic', models.ForeignKey(blank=True, help_text='Optional: Topic this lesson belongs to', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_lessons', to='courses.topic')),
            ],
            options={
                'ordering': ['course', 'order'],
                'unique_together': {('course', 'order')},
            },
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('issued_on', models.DateTimeField(auto_now_add=True)),
                ('certificate_file', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('certificate_url', models.URLField(blank=True, null=True)),
                ('is_generated', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_certificates', to=settings.AUTH_USER_MODEL)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='courses.course')),
            ],
            options={
                'ordering': ['-issued_on'],
                'unique_together': {('user', 'course')},
            },
        ),
        migrations.CreateModel(
            name='Enrollment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress', models.IntegerField(default=0)),
                ('enrolled_at', models.DateTimeField(auto_now_add=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='enrollments', to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_enrollments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-enrolled_at'],
                'unique_together': {('user', 'course')},
            },
        ),
        migrations.CreateModel(
            name='WatchedLesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('watched_on', models.DateTimeField(auto_now_add=True)),
                ('watch_duration', models.PositiveIntegerField(default=0, help_text='Seconds watched')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watches', to='courses.lesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watched_course_lessons', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-watched_on'],
                'unique_together': {('user', 'lesson')},
            },
        ),
    ]
